version: 0.2

env:
    shell: bash
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - docker login -u $DOCKER_USER -p $DOCKER_ACCESS_TOKEN
      - aws --version
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - REPOSITORY_URI=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/private-gpt-ui
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest --build-arg ENV=$ENV .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$CUSTOME_IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo "Removing older <untagged> images"
      - IMAGES_TO_DELETE=$(aws ecr list-images --region $AWS_REGION --repository-name private-gpt-ui --filter "tagStatus=UNTAGGED" --query 'imageIds[*]' --max-items 100 --output json)
      - echo "$IMAGES_TO_DELETE"
      - aws ecr batch-delete-image --region $AWS_REGION --repository-name private-gpt-ui --image-ids "$IMAGES_TO_DELETE" || true
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$CUSTOME_IMAGE_TAG
      - echo completed pushing image to ecr




